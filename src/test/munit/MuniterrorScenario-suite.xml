<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xsi:schemaLocation="
		http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
		http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd">
	<munit:config name="MuniterrorScenario-suite.xml" />
	<munit:test name="MuniterrorScenarioFlow-testnorecords" doc:id="0bf44d2c-5325-4339-ab82-8df8f12ef9cb" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock Select" doc:id="082e6a9e-9b2c-4766-a7b5-be0ebd86a9fe" processor="db:select">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="16c26127-28a1-4804-a60c-ae7418910cf4" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/java  --- readUrl('classpath://MuniterrorScenarioFlowtestnorecords/mock_payload.dwl')]" mediaType="application/java " encoding="UTF-8" />
					<munit-tools:variables >
						<munit-tools:variable key="StudentName" value="#[output application/java --- readUrl('classpath://MuniterrorScenarioFlowtestnorecords/mock_variable_.dwl')]" mediaType="application/java" encoding="UTF-8" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit:set-event doc:name="Set Input" doc:id="826b0653-deda-4a2b-8fe2-fc7850d3ab2a" >
				<munit:payload value="#[readUrl('classpath://MuniterrorScenarioFlowtestnorecords/set-event_payload.dwl')]" encoding="UTF-8" />
				<munit:attributes value="#[readUrl('classpath://MuniterrorScenarioFlowtestnorecords/set-event_attributes.dwl')]" />
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to MuniterrorScenarioFlow" doc:id="3c6207d6-35c1-4506-8ffb-b01ea9ed93a0" name="MuniterrorScenarioFlow"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="213660c7-0aa8-4201-9d55-7549e0c28b69" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import MuniterrorScenarioFlowtestnorecords::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
		</munit:validation>
	</munit:test>
	<munit:test name="MuniterrorScenarioFlow-testrecords" doc:id="e4292e0d-9cfd-4f64-ae2c-bcf094d9e378" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock Select" doc:id="0ee526de-5512-4c2e-a319-899a998b07ce" processor="db:select">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="16c26127-28a1-4804-a60c-ae7418910cf4" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/java  --- readUrl('classpath://MuniterrorScenarioFlowtestrecords/mock_payload.dwl')]" mediaType="application/java " encoding="UTF-8" />
					<munit-tools:variables >
						<munit-tools:variable key="StudentName" value="#[output application/java --- readUrl('classpath://MuniterrorScenarioFlowtestrecords/mock_variable_.dwl')]" mediaType="application/java" encoding="UTF-8" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit:set-event doc:name="Set Input" doc:id="1e0ad27d-1ddb-486b-b459-2b2d71a58208" >
				<munit:payload value="#[readUrl('classpath://MuniterrorScenarioFlowtestrecords/set-event_payload.dwl')]" encoding="UTF-8" />
				<munit:attributes value="#[readUrl('classpath://MuniterrorScenarioFlowtestrecords/set-event_attributes.dwl')]" />
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to MuniterrorScenarioFlow" doc:id="be47cd79-3d9c-4ebe-b311-53284dad87a8" name="MuniterrorScenarioFlow"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="9c23fa37-eedc-42ca-aeaa-0d514c281985" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import MuniterrorScenarioFlowtestrecords::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
		</munit:validation>
	</munit:test>
	<munit:test name="MuniterrorScenarioFlow-testerror" doc:id="8f31b3f6-c12e-4ebd-8614-5f78fc8556d3" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock Select" doc:id="1f638daf-1f61-4826-a5da-f26706a12a34" processor="db:select">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="16c26127-28a1-4804-a60c-ae7418910cf4" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					
					<munit-tools:error typeId="DB:CONNECTIVITY" />
					<munit-tools:variables >
						<munit-tools:variable key="StudentName" value="#[output application/java --- readUrl('classpath://MuniterrorScenarioFlowtestrecords/mock_variable_.dwl')]" mediaType="application/java" encoding="UTF-8" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit:set-event doc:name="Set Input" doc:id="93cd696b-8572-443b-9385-c233312fd4fd" >
				<munit:payload value="#[readUrl('classpath://MuniterrorScenarioFlowtestrecords/set-event_payload.dwl')]" encoding="UTF-8" />
				<munit:attributes value="#[readUrl('classpath://MuniterrorScenarioFlowtestrecords/set-event_attributes.dwl')]" />
			</munit:set-event>
		</munit:behavior>
		<munit:execution>
			<try doc:name="Try" doc:id="df046fc0-1d0e-4f5d-b11c-269963de1ccd" >
				<flow-ref doc:name="Flow-ref to MuniterrorScenarioFlow" doc:id="b9ed9bb4-6568-41c2-a705-37c1d8e60cde" name="MuniterrorScenarioFlow" />
				<error-handler >
					<on-error-continue enableNotifications="true" logException="true" doc:name="On Error Continue" doc:id="affa0046-2047-429f-bb70-03b7d520636b" >
						<logger level="INFO" doc:name="Logger" doc:id="b2d095d2-6ebd-4aa7-a31b-f22005a91aca" message="continue.."/>
					</on-error-continue>
				</error-handler>
			</try>
		</munit:execution>
		<munit:validation>
			<munit-tools:assert-that doc:name="Assert that" doc:id="3870c1a5-4bf2-4422-a4c7-4483b7358541" is="#[MunitTools::equalTo('DB CONNEVCTIVITY')]" expression="#[payload.error]"/>
		</munit:validation>
	</munit:test>

</mule>
